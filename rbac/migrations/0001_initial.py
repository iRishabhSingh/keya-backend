# Generated by Django 5.2.3 on 2025-06-19 12:52

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PolicyAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'policy assignment',
                'verbose_name_plural': 'policy assignments',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_system_role', models.BooleanField(default=False)),
                ('scope', models.CharField(choices=[('system', 'System-wide'), ('global', 'Global (across tenants)'), ('tenant', 'Tenant-specific'), ('user', 'User-specific')], max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granted_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'role permission',
                'verbose_name_plural': 'role permissions',
            },
        ),
        migrations.CreateModel(
            name='SecurityPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('policy_type', models.CharField(choices=[('password', 'Password Policy'), ('mfa', 'MFA Policy'), ('login_attempt', 'Login Attempt Policy'), ('session', 'Session Policy')], max_length=50)),
                ('config', models.JSONField(default=dict, help_text='JSON configuration for the policy (e.g., {"min_length": 8, "require_digits": true})')),
                ('applies_to', models.CharField(choices=[('all', 'All Users'), ('roles', 'Specific Roles'), ('users', 'Specific Users')], max_length=10)),
            ],
            options={
                'verbose_name': 'security policy',
                'verbose_name_plural': 'security policies',
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grant_type', models.CharField(choices=[('+', 'Grant'), ('-', 'Deny')], max_length=1)),
                ('granted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'user permission',
                'verbose_name_plural': 'user permissions',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope_id', models.UUIDField(blank=True, help_text='Optional: ID for tenant, organization, or specific entity for scoped roles', null=True)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'user role',
                'verbose_name_plural': 'user roles',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(help_text='e.g., "order:refund", "product:edit"', max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(help_text='e.g., "product", "order", "user", "marketing"', max_length=50)),
                ('min_scope', models.CharField(choices=[('system', 'System-wide'), ('global', 'Global (across tenants)'), ('tenant', 'Tenant-specific'), ('user', 'User-specific')], default='global', max_length=10)),
            ],
            options={
                'verbose_name': 'permission',
                'verbose_name_plural': 'permissions',
                'indexes': [models.Index(fields=['code'], name='rbac_permis_code_f6107f_idx'), models.Index(fields=['category'], name='rbac_permis_categor_fa86d1_idx')],
            },
        ),
    ]
